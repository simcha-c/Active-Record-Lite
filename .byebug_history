c
source_options.table_name
source_options
c
result
c
through_foreign_key
result
c
result
c
result
c
source_options.table_name
through_options.table_name
through_options
source_options
source_options.table_name
source_options
through_options
source_options
continue
through_options.assoc_options
through_options.class_name.assoc_options
self.class.assoc_options
self
self.class.assoc_options
self
cat
self
cat
self.class.assoc_options
through_options.table_name
source_options
through_options
self
source_options
through_foreign_key
though_foreign_key
c
through_options
self.send("owner_id")
self.send("owner_id)
self
c
self.assoc_options[through_name].model_class.belongs_to(:house)
self.assoc_options[through_name].model_class
self.assoc_options[through_name]
self.assoc_options[souce_name]
self.assoc_options
source_name
through_name
name
self
c
self
se;f
name
self.class.assoc_options[:name]
self.class.assoc_options[name]
self.class.assoc_options
assoc_options
self.belongs_to(:human)
self.class.assoc_options.name
self.class.assoc_options
self.assoc_options
assoc_options
through_options.options
through_options
self
through_options.model_class
through_options.model_name
self.send('foreign_key')
self
through_options.class_name
through_foreign_key
c
exit
source_options
source_options.table_name
through_options.table_name
c
through_options
through_options.table_name
self.class.assoc_options
self.assoc_options
self.class.assoc_options
self.class
self
self.
c
source_options
through_options
exit
cd Human
Pops.class
Human.class
through_options.model_class.assoc_options[source_name]
source_name
through_options.model_class
through_options
through_options.class
through_options.class_name.model_class
through_options.class_name
c
through_options
c
assoc_options
self
c
Cat.assoc_options
self
Human.assoc_options
Human.ass_options
@ass_options[through_name]
@ass_options
through_name
c
result
c
self
params
c
model_class_obj
self
c
options.primary_key
options[primary_key]
c
primary_key_val
model_class_obj
c
self.owner_id
self
self.send("#{options.foreign_key}")
self.send("#{options.foreign_key}"
options.foreign_key
options
exit
self
c
self
c
self
seld
self
c
self
sel
c
self
c
options
self
c
self
